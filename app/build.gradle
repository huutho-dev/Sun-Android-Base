apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "team.app.base"
        minSdkVersion rootProject.ext.minSdk
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        targetSdkVersion rootProject.ext.targetSdk
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    flavorDimensions "default"

    dataBinding { enabled = true }

    dexOptions { javaMaxHeapSize "4g" }

    testOptions { unitTests.returnDefaultValues = true }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    signingConfigs {
        debug {
            /*storeFile file('debug.jks')
            storePassword "storePassword"
            keyAlias "keyAlias"
            keyPassword "keyPassword"*/
        }
        release {
            /*storeFile file('release.jks')
            storePassword "storePassword"
            keyAlias "keyAlias"
            keyPassword "keyPassword"*/
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            versionNameSuffix ".debug"
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    productFlavors {
        development {
            buildConfigField "String", "DOMAIN", '"http://google.com"'
        }

        staging {
            buildConfigField "String", "DOMAIN", '"http://google.com"'
        }


        production {
            buildConfigField "String", "DOMAIN", '"http://google.com"'
        }
    }
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation "androidx.core:core-ktx:${rootProject.ktx}"
    implementation "androidx.annotation:annotation:$rootProject.annotation"
    implementation "androidx.appcompat:appcompat:$rootProject.appCompat"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintlayout"

    // For view
    implementation "androidx.multidex:multidex:$rootProject.multiDex"
    implementation "androidx.appcompat:appcompat:$rootProject.appCompat"
    implementation "androidx.cardview:cardview:$rootProject.cardView"
    implementation "com.google.android.material:material:$rootProject.material"
    implementation "androidx.recyclerview:recyclerview:$rootProject.recyclerView"
    implementation "de.hdodenhof:circleimageview:$rootProject.circleimageview"

    // For network & sync
    implementation "com.google.code.gson:gson:$rootProject.ext.gson_version"
    implementation "com.squareup.okhttp3:okhttp:$rootProject.ext.okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.ext.okhttp_version"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofit2_version"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofit2_version"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$rootProject.coroutines_adapter_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.ext.coroutines_version"

    // For load image
    implementation "com.github.bumptech.glide:glide:$rootProject.ext.glide_version"
    kapt "com.github.bumptech.glide:compiler:$rootProject.ext.glide_version"

    // For request Permission
    implementation "com.github.hotchemi:permissionsdispatcher:$rootProject.ext.dispatcher_version"
    kapt "com.github.hotchemi:permissionsdispatcher-processor:$rootProject.ext.dispatcher_version"

    // Koin for Android
    implementation "org.koin:koin-android:$rootProject.ext.koin_version"
    implementation "org.koin:koin-androidx-scope:$rootProject.ext.koin_version"
    implementation "org.koin:koin-android-viewmodel:$rootProject.ext.koin_version"
    androidTestImplementation "org.koin:koin-test:$rootProject.ext.koin_version"

    // LeakCanary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$rootProject.ext.leakCanary"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.ext.leakCanary"

    // JetPack
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.lifecycle_version"
    implementation "androidx.room:room-runtime:$rootProject.room_version"
    implementation "androidx.room:room-ktx:$rootProject.room_version"
    kapt "androidx.room:room-compiler:$rootProject.room_version"
}
